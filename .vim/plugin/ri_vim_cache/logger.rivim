= logger

(from gem actionpack-3.2.9)
=== Implementation from ActionController::LogSubscriber
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------


(from gem actionmailer-3.2.9)
=== Implementation from ActionMailer::LogSubscriber
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------


(from gem actionpack-3.2.9)
=== Implementation from ActionView::LogSubscriber
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------

TODO: Ideally, ActionView should have its own logger so it does not depend on
AC.logger


(from gem activerecord-3.2.9)
=== Implementation from ActiveRecord::Base
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------

Accepts a logger conforming to the interface of Log4r or the default Ruby 1.8+
Logger class, which is then passed on to any new database connections made and
which can be retrieved on both a class and instance level by calling
<tt>logger</tt>.


(from gem activerecord-3.2.9)
=== Implementation from ActiveRecord::ConnectionAdapters::AbstractAdapter#logger
------------------------------------------------------------------------------


(from gem activerecord-3.2.9)
=== Implementation from ActiveRecord::LogSubscriber
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------


(from gem activeresource-3.2.9)
=== Implementation from ActiveResource::Base
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------

The logger for diagnosing and tracing Active Resource calls.


(from gem activeresource-3.2.9)
=== Implementation from ActiveResource::LogSubscriber
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------


(from gem activesupport-3.2.12)
=== Implementation from ActiveSupport::LogSubscriber
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------


(from gem better_errors-0.3.2)
=== Implementation from BetterErrors::logger
------------------------------------------------------------------------------

The logger to use when logging exception details and backtraces. If you are
using Better Errors with Rails, you do not need to set this attribute
manually. If this attribute is `nil`, nothing will be logged.

@return [Logger, nil]


(from gem capistrano-2.13.5)
=== Implementation from Capistrano::Configuration#logger
------------------------------------------------------------------------------

The logger instance defined for this configuration.


(from gem capistrano-2.13.5)
=== Implementation from Capistrano::Transfer#logger
------------------------------------------------------------------------------


(from gem cucumber-1.2.1)
=== Implementation from Cucumber
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------


(from gem database_cleaner-0.7.2)
=== Implementation from DatabaseCleaner
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------


(from gem guard-1.6.2)
=== Implementation from Guard::Dsl
------------------------------------------------------------------------------
  logger(options)

------------------------------------------------------------------------------

Configure the Guard logger.

* Log level must be either `:debug`, `:info`, `:warn` or `:error`.
* Template supports the following placeholders: `:time`, `:severity`,
  `:progname`, `:pid`, `:unit_of_work_id` and `:message`
* Time format directives are the same as Time#strftime or :milliseconds
* The `:only` and `:except` options must be a RegExp.

@example Set the log level
  logger :level => :warn

@example Set a custom log template
  logger :template => '[Guard - :severity - :progname - :time] :message'

@example Set a custom time format
  logger :time_format => '%h'

@example Limit logging to a Guard plugin
  logger :only => :jasmine

@example Log all but not the messages from a specific Guard plugin
  logger :except => :jasmine

@param [Hash] options the log options @option options [String, Symbol] level
the log level @option options [String] template the logger template @option
options [String, Symbol] time_format the time format @option options [RegExp]
only show only messages from the matching Guard plugin @option options
[RegExp] except does not show messages from the matching Guard plugin


(from gem guard-1.6.2)
=== Implementation from Guard::UI
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------

Get the Guard::UI logger instance


(from ruby site)
=== Implementation from Logger::Application
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------

Logger for this application.  See the class Logger for an explanation.


(from gem net-ssh-2.6.2)
=== Implementation from Net::SSH::Loggable#logger
------------------------------------------------------------------------------

The logger instance that will be used to log messages. If nil, nothing will be
logged.


(from gem rack-1.4.5)
=== Implementation from Rack::Request
------------------------------------------------------------------------------
  logger()

------------------------------------------------------------------------------


(from gem sprockets-2.2.2)
=== Implementation from Rake::SprocketsTask#logger
------------------------------------------------------------------------------

Logger to use during rake tasks. Defaults to using stderr.

  t.logger = Logger.new($stdout)


(from gem sass-3.2.5)
=== Implementation from Sass::logger
------------------------------------------------------------------------------


(from gem sprockets-2.2.2)
=== Implementation from Sprockets::Base#logger
------------------------------------------------------------------------------

Get and set `Logger` instance.


(from ruby site)
=== Implementation from WEBrick::CGI#logger
------------------------------------------------------------------------------


(from ruby site)
=== Implementation from WEBrick::GenericServer#logger
------------------------------------------------------------------------------


(from ruby site)
=== Implementation from WEBrick::HTTPAuth::Authenticator#logger
------------------------------------------------------------------------------

The logger for this authenticator


(from ruby site)
=== Implementation from WEBrick::HTTPAuth::BasicAuth#logger
------------------------------------------------------------------------------


