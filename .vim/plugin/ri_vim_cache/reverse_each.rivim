= reverse_each

(from ruby site)
=== Implementation from Array
------------------------------------------------------------------------------
  ary.reverse_each {|item| block }   -> ary
  ary.reverse_each                   -> an_enumerator

------------------------------------------------------------------------------

Same as <tt>Array#each</tt>, but traverses <tt>self</tt> in reverse order.

  a = [ "a", "b", "c" ]
  a.reverse_each {|x| print x, " " }

produces:

  c b a


(from ruby site)
=== Implementation from Enumerable
------------------------------------------------------------------------------
  enum.reverse_each(*args) {|item| block }   ->  enum
  enum.reverse_each(*args)                   ->  an_enumerator

------------------------------------------------------------------------------

Builds a temporary array and traverses that array in reverse order.

If no block is given, an enumerator is returned instead.

    (1..3).reverse_each {|v| p v }

  produces:

    3
    2
    1


