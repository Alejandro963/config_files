= let

(from ruby site)
=== Implementation from MiniTest::Spec
------------------------------------------------------------------------------
  let(name, &block)

------------------------------------------------------------------------------


(from gem rspec-core-2.12.2)
=== Implementation from RSpec::Core::Let::ExampleGroupMethods
------------------------------------------------------------------------------
  let(name, &block)

------------------------------------------------------------------------------

Generates a method whose return value is memoized after the first call. Useful
for reducing duplication between examples that assign values to the same local
variable.

@note `let` <em>can</em> enhance readability when used sparingly (1,2, or
  maybe 3 declarations) in any given example group, but that can
  quickly degrade with overuse. YMMV.

@note `let` uses an `||=` conditional that has the potential to
  behave in surprising ways in examples that spawn separate threads,
  though we have yet to see this in practice. You've been warned.

@example

  describe Thing do
    let(:thing) { Thing.new }

    it "does something" do
      # first invocation, executes block, memoizes and returns result
      thing.do_something

      # second invocation, returns the memoized value
      thing.should be_something
    end
  end


